{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkJS\\\\react-redux-reddit\\\\frontend\\\\src\\\\Components\\\\Post\\\\MakePost.jsx\",\n  _s = $RefreshSig$();\nimport Input from \"../InputFields/Input\";\nimport { useState } from 'react';\nimport './post.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MakePost = () => {\n  _s();\n  const [title, setTitle] = useState('Add a title');\n  const [desc, setDesc] = useState('Add some descriptions');\n  const tags = ['None', 'NSFW', 'Mood', 'Quotes', 'Shitpost'];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"makepost-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"makepost-navigation\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"makepost-save\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      label: \"Title\",\n      data: title,\n      setData: setTitle,\n      inputType: \"textarea\",\n      classStyle: \"makepost-title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      label: \"Descriptions\",\n      data: desc,\n      setData: setDesc,\n      inputType: \"textarea\",\n      classStyle: \"makepost-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"\",\n      children: \" Tags \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"makepost-tags\",\n      children: tags.map(tag => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `makepost-tags-${tag}`,\n          children: [\" \", tag, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(MakePost, \"DOJPel4ZbUeu6IsMVS8vbZBF+do=\");\n_c = MakePost;\nexport default MakePost;\nvar _c;\n$RefreshReg$(_c, \"MakePost\");","map":{"version":3,"names":["Input","useState","jsxDEV","_jsxDEV","MakePost","_s","title","setTitle","desc","setDesc","tags","className","children","fileName","_jsxFileName","lineNumber","columnNumber","label","data","setData","inputType","classStyle","htmlFor","map","tag","_c","$RefreshReg$"],"sources":["D:/WorkJS/react-redux-reddit/frontend/src/Components/Post/MakePost.jsx"],"sourcesContent":["import Input from \"../InputFields/Input\";\r\nimport { useState } from 'react';\r\nimport './post.css';\r\n\r\nconst MakePost = () => {\r\n    const [title, setTitle] = useState('Add a title');\r\n    const [desc, setDesc] = useState('Add some descriptions');\r\n    const tags = [\r\n        'None',\r\n        'NSFW',\r\n        'Mood',\r\n        'Quotes',\r\n        'Shitpost',\r\n    ];\r\n    \r\n\r\n    return ( \r\n        <section className=\"makepost-container\">\r\n            <div className=\"makepost-navigation\">\r\n                <p className=\"makepost-save\">\r\n                    Post\r\n                </p>\r\n            </div>\r\n            <Input \r\n                label=\"Title\" \r\n                data={title} \r\n                setData={setTitle} \r\n                inputType=\"textarea\"\r\n                classStyle=\"makepost-title\"\r\n            />\r\n            <Input \r\n                label=\"Descriptions\" \r\n                data={desc} \r\n                setData={setDesc} \r\n                inputType=\"textarea\"\r\n                classStyle=\"makepost-desc\"\r\n            />\r\n            <label htmlFor=\"\"> Tags </label>\r\n            <div className=\"makepost-tags\">\r\n                {tags.map((tag) => {\r\n                    return (\r\n                        <button className={`makepost-tags-${tag}`}> { tag } </button>\r\n                    )\r\n                })}\r\n            </div>\r\n        </section>\r\n     );\r\n}\r\n \r\nexport default MakePost;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,sBAAsB;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,aAAa,CAAC;EACjD,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,uBAAuB,CAAC;EACzD,MAAMS,IAAI,GAAG,CACT,MAAM,EACN,MAAM,EACN,MAAM,EACN,QAAQ,EACR,UAAU,CACb;EAGD,oBACIP,OAAA;IAASQ,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACnCT,OAAA;MAAKQ,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eAChCT,OAAA;QAAGQ,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAE7B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNb,OAAA,CAACH,KAAK;MACFiB,KAAK,EAAC,OAAO;MACbC,IAAI,EAAEZ,KAAM;MACZa,OAAO,EAAEZ,QAAS;MAClBa,SAAS,EAAC,UAAU;MACpBC,UAAU,EAAC;IAAgB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFb,OAAA,CAACH,KAAK;MACFiB,KAAK,EAAC,cAAc;MACpBC,IAAI,EAAEV,IAAK;MACXW,OAAO,EAAEV,OAAQ;MACjBW,SAAS,EAAC,UAAU;MACpBC,UAAU,EAAC;IAAe;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFb,OAAA;MAAOmB,OAAO,EAAC,EAAE;MAAAV,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAChCb,OAAA;MAAKQ,SAAS,EAAC,eAAe;MAAAC,QAAA,EACzBF,IAAI,CAACa,GAAG,CAAEC,GAAG,IAAK;QACf,oBACIrB,OAAA;UAAQQ,SAAS,EAAG,iBAAgBa,GAAI,EAAE;UAAAZ,QAAA,GAAC,GAAC,EAAEY,GAAG,EAAE,GAAC;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAErE,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAElB,CAAC;AAAAX,EAAA,CA3CKD,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}