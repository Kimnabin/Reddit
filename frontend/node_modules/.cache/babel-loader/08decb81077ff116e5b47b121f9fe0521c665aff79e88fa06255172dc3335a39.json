{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkJS\\\\react-redux-reddit\\\\frontend\\\\src\\\\Components\\\\Post\\\\Post.jsx\",\n  _s = $RefreshSig$();\n// display post of a user on home page\n\nimport { useSelector } from \"react-redux\";\nimport './post.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const post = useSelector(state => state.post.posts);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"post-container\",\n    children: post.slice(1).map((post, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"posts\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"posts-title\",\n          children: [\" \", post.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"posts-tags\",\n          children: [\" \", post.tag, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"posts-description\",\n          children: [\" \", post.description, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_s(Posts, \"ZCrU7oOX7AXdDCQUnV4+qfKeF4w=\", false, function () {\n  return [useSelector];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useSelector","jsxDEV","_jsxDEV","Posts","_s","post","state","posts","className","children","slice","map","index","title","fileName","_jsxFileName","lineNumber","columnNumber","tag","description","_c","$RefreshReg$"],"sources":["D:/WorkJS/react-redux-reddit/frontend/src/Components/Post/Post.jsx"],"sourcesContent":["// display post of a user on home page\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport './post.css';\r\n\r\nconst Posts = () => {\r\n    const post = useSelector((state) => state.post.posts);\r\n\r\n    return ( \r\n        <section className=\"post-container\">\r\n            {post.slice(1).map((post, index) => {\r\n                return(\r\n                    <div className=\"posts\" key={index}>\r\n                        <p className=\"posts-title\"> {post.title} </p>\r\n                        <p className=\"posts-tags\"> {post.tag} </p>\r\n                        <p className=\"posts-description\"> {post.description} </p>\r\n                    </div>\r\n                )\r\n            })}\r\n        </section>\r\n     );\r\n}\r\n \r\nexport default Posts;"],"mappings":";;AAAA;;AAEA,SAASA,WAAW,QAAQ,aAAa;AACzC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,IAAI,GAAGL,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACD,IAAI,CAACE,KAAK,CAAC;EAErD,oBACIL,OAAA;IAASM,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC9BJ,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACN,IAAI,EAAEO,KAAK,KAAK;MAChC,oBACIV,OAAA;QAAKM,SAAS,EAAC,OAAO;QAAAC,QAAA,gBAClBP,OAAA;UAAGM,SAAS,EAAC,aAAa;UAAAC,QAAA,GAAC,GAAC,EAACJ,IAAI,CAACQ,KAAK,EAAC,GAAC;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC7Cf,OAAA;UAAGM,SAAS,EAAC,YAAY;UAAAC,QAAA,GAAC,GAAC,EAACJ,IAAI,CAACa,GAAG,EAAC,GAAC;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC1Cf,OAAA;UAAGM,SAAS,EAAC,mBAAmB;UAAAC,QAAA,GAAC,GAAC,EAACJ,IAAI,CAACc,WAAW,EAAC,GAAC;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GAHjCL,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAI5B,CAAC;IAEd,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAElB,CAAC;AAAAb,EAAA,CAhBKD,KAAK;EAAA,QACMH,WAAW;AAAA;AAAAoB,EAAA,GADtBjB,KAAK;AAkBX,eAAeA,KAAK;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}